---
# adjust the psp to your needs
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: psp-jindra-operator
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName: 'docker/default'
spec:
  privileged: false
  # Required to prevent escalations to root.
  allowPrivilegeEscalation: false
  # This is redundant with non-root + disallow privilege escalation,
  # but we can provide it for defense in depth.
  # requiredDropCapabilities:
  #   - ALL
  # Allow core volume types.
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    # Assume that persistentVolumes set up by the cluster admin are safe to use.
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
  # Require the container to run without root privileges.
  #  rule: 'MustRunAsNonRoot'
    rule: 'RunAsAny'
  seLinux:
    # This policy assumes the nodes are using AppArmor rather than SELinux.
    rule: 'RunAsAny'
  # supplementalGroups:
  #   rule: 'MustRunAs'
  #   ranges:
  #     # Forbid adding the root group.
  #     - min: 1
  #       max: 65535
  # fsGroup:
  #   rule: 'MustRunAs'
  #   ranges:
  #     # Forbid adding the root group.
  #     - min: 1
  #       max: 65535
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
  name: psp:jindra-operator
rules:
  - apiGroups:
      - policy
    resourceNames:
      - psp-jindra-operator
    resources:
      - podsecuritypolicies
    verbs:
      - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
  name: psp:jindra-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: psp:jindra-operator
subjects:
  - kind: ServiceAccount
    name: jindra
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:serviceaccounts
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
