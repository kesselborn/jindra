apiVersion: v1
kind: Pod
metadata:
  # generated by jindra
  name: ${MY_NAME}.01-build-go-binary
  annotations:
    jindra.io/inputs: git
    jindra.io/outputs: transit

    # generated transparently by jindra -- all step containers apart from those declared as jindra.io/services
    jindra.io/wait-for: build-go-binary

  creationTimestamp: null
  labels:
    jindra.io/uid: ${MY_UID}
spec:
############# set automatically / if set: validate (jindra generated)
  restartPolicy: Never

############# affinity for faster artifact sync (jindra generated)
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        preference:
          matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
            - ${MY_NODE_NAME}

  volumes:
############# transit folder accessible by all containers; for promoting artifacts between stages (jindra generated)
  - name: jindra-tools
    emptyDir: {}
############# for synchronizing containers ... mainly for out resources (jindra generated)
  - name: jindra-semaphores
    emptyDir: {}
# shared folder for containers in the pod == normal volume
  - name: jindra-resource-git
    emptyDir: {}
  - name: jindra-resource-transit
    emptyDir: {}
############# rsync ssh key (jindra generated)
# rsync -avvz -e "ssh -p 2222 -i rsync -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" . jindra@localhost:~/
  - name: jindra-rsync-ssh-keys
    secret:
      secretName: jindra.http-fs-42.rsync-keys
      defaultMode: 256
      items:
        - key: priv
          path: ./jindra
############# git in resource folder (jindra generated)
    #
############# jindra-tools (jindra generated)
  initContainers:
############# copy jindra-tools to shared dir, create semaphore files /jindra/tools (jindra generated)
    - name: get-jindra-tools
      resources: {}
      image: jindra/tools
      imagePullPolicy: Always
      command:
        - sh
        - -xc
        - |-
          cp /jindra/contrib/* /opt/jindra/bin

          # create a few semaphores which can be used to block outputs
          # until main steps are finished
          touch /var/lock/jindra/steps-running
          touch /var/lock/jindra/outputs-running
          touch /var/lock/jindra/container-build-go-binary
          touch /var/lock/jindra/container-jindra-watcher
          touch /var/lock/jindra/container-jindra-resource-out-transit

      volumeMounts:
      - mountPath: /var/lock/jindra
        name: jindra-semaphores
      - mountPath: /opt/jindra/bin
        name: jindra-tools

############# git in resource (jindra generated)
    - name: jindra-resource-in-git
      resources: {}
      image: concourse/git-resource
      env:
        - { name: git.source.uri, value: "git@github.com:kesselborn/http-fs" }
        - { name: git.source.private_key, valueFrom: { secretKeyRef: {name: deploy-key, key: key}}}
      command:
        - /opt/jindra/bin/env-to-json
        - -prefix=git
        - -semaphore-file=/var/lock/jindra/setting-up-pod
        - /opt/resource/in
        - /jindra/resources/git
      volumeMounts:
      - mountPath: /jindra/resources/git
        name: jindra-resource-git
      - mountPath: /opt/jindra/bin
        name: jindra-tools
        readOnly: true

  containers:
############# pipeline step 01
    - name: build-go-binary
      resources: {}
      image: golang
      workingDir: /jindra/resources/git
      command:
        - sh
        - -c
        - |
          set -xe # fail if any of the command fails
          go build -x -o /jindra/resources/transit/http-fs-linux .
          cp Dockerfile.hello-world /jindra/resources/transit/Dockerfile
      volumeMounts:
      # injected due to git resource
      - mountPath: /jindra/resources/git
        name: jindra-resource-git
      # transparently generated by jindra
      - mountPath: /jindra/resources/transit
        name: jindra-resource-transit
    # transparently created by jindra

############# state watcher for semaphores (jindra generated)
    - name: jindra-watcher
      resources: {}
      image: alpine
      env:
        - {name: "JOB_IP", value: "${MY_IP}" }
      args:
        - sh
        - -c
        # generated name, containers == all manual steps or whatever is annotated in 'jindra.io/wait-for'
        - |
          printf "waiting for steps to finish "
          while ! wget -qO- ${MY_IP}:8080/pod/${MY_NAME}.01-build-go-binary?containers=build-go-binary|grep Completed &>/dev/null
          do
            printf "."
            sleep 3
          done
          echo
          rm /var/lock/jindra/steps-running
      volumeMounts:
      # transparently generated by jindra
      - mountPath: /var/lock/jindra
        name: jindra-semaphores

############# out resource: transit back to job (jindra generated)
    - name: jindra-resource-out-transit
      resources: {}
      image: mrsixw/concourse-rsync-resource
      env:
        - {name: "transit.source.server", value: "${MY_IP}" }
        - {name: "transit.source.base_dir", value: "/tmp" }
        - {name: "transit.source.user", value: "root" }
        - {name: "transit.source.disable_version_path", value: "true" }
        - {name: "transit.version", value: "{\"ref\":\"tmp\"}"}
        - {name: "transit.source.private_key", valueFrom: { secretKeyRef: { name: "jindra.http-fs-42.rsync-keys", key: "priv" } } }
      args:
        - /opt/jindra/bin/env-to-json
        - -prefix=transit
        - -semaphore-file=/var/lock/jindra/steps-running
        - /opt/resource/out
        - /jindra/resources/transit
      volumeMounts:
      # transparently generated by jindra
      - mountPath: /jindra/resources/transit
        name: jindra-resource-transit
      - mountPath: /opt/jindra/bin
        name: jindra-tools
        readOnly: true
      - mountPath: /var/lock/jindra
        name: jindra-semaphores
        readOnly: true

############# debug: created when annotation 'jindra.io/debug: true' is set
#   - name: debug
#     image: alpine
#     env:
#       - {name: "JOB_IP", value: "${MY_IP}" }
#     args:
#       - sh
#       - -c
#       - sleep 3600
#     volumeMounts:
#     # mount all volumes
#     - mountPath: /var/lock/jindra
#       name: jindra-semaphores
#     - mountPath: /jindra/resources/git
#       name: git
#     - mountPath: /opt/jindra/bin
#       name: jindra-tools
#     - mountPath: /jindra/resources/transit
#       name: transit
status: {}
