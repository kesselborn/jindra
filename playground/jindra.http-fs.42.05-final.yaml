---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    jindra.io/outputs: slack
    jindra.io/outputs-envs: |
      slack.params.text=final
      slack.params.icon_emoji=:angry:
      slack.params.attachments=[{"color":"#0000ff","text":"final text!"}]
    jindra.io/wait-for: ""
  creationTimestamp: null
  labels:
    jindra.io/pipeline: http-fs
    jindra.io/run: "42"
    jindra.io/uid: ${MY_UID}
  name: ${MY_NAME}.05-final
spec:
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - preference:
          matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
            - ${MY_NODE_NAME}
        weight: 1
  containers:
  - args:
    - sh
    - -c
    - |
      printf "waiting for steps to finish "
      while ! wget -qO- ${MY_IP}:8080/pod/${MY_NAME}.05-final?containers=|grep Completed &>/dev/null
      do
        printf "."
        sleep 3
      done
      echo
      rm /var/lock/jindra/steps-running
    env:
    - name: JOB_IP
      value: ${MY_IP}
    image: alpine
    name: jindra-watcher
    resources: {}
    volumeMounts:
    - mountPath: /var/lock/jindra
      name: jindra-semaphores
  - args:
    - /opt/jindra/bin/crij
    - -env-prefix=slack
    - -semaphore-file=/var/lock/jindra/steps-running
    - -env-file=/jindra/resources/slack/.jindra.resource.env
    - -ignore-missing-env-file
    - -stderr-file=/jindra/resources/slack/.jindra.out-resource.stderr
    - -stdout-file=/jindra/resources/slack/.jindra.out-resource.stdout
    - /opt/resource/out
    - /jindra/resources/slack
    env:
    - name: slack.source.url
      valueFrom:
        secretKeyRef:
          key: webhook_url
          name: slack
    - name: slack.params.channel
      value: jindra
    - name: slack.params.username
      value: Alfons
    - name: slack.params.text
      value: final
    - name: slack.params.icon_emoji
      value: ':angry:'
    - name: slack.params.attachments
      value: '[{"color":"#0000ff","text":"final text!"}]'
    image: cfcommunity/slack-notification-resource
    name: jindra-resource-out-slack
    resources: {}
    volumeMounts:
    - mountPath: /jindra/resources/slack
      name: jindra-resource-slack
    - mountPath: /opt/jindra/bin
      name: jindra-tools
      readOnly: true
    - mountPath: /var/lock/jindra
      name: jindra-semaphores
      readOnly: true
  initContainers:
  - command:
    - sh
    - -xc
    - |-
      cp /jindra/contrib/* /opt/jindra/bin

      # create a few semaphores which can be used to block outputs
      # until main steps are finished
      touch /var/lock/jindra/steps-running
      touch /var/lock/jindra/outputs-running
      touch /var/lock/jindra/container-jindra-watcher
      touch /var/lock/jindra/container-jindra-resource-out-slack
    image: jindra/tools
    imagePullPolicy: Always
    name: get-jindra-tools
    resources: {}
    volumeMounts:
    - mountPath: /var/lock/jindra
      name: jindra-semaphores
    - mountPath: /opt/jindra/bin
      name: jindra-tools
  restartPolicy: Never
  volumes:
  - emptyDir: {}
    name: jindra-tools
  - emptyDir: {}
    name: jindra-semaphores
  - emptyDir: {}
    name: jindra-resource-slack
  - name: jindra-rsync-ssh-keys
    secret:
      defaultMode: 256
      items:
      - key: priv
        path: ./jindra
      secretName: jindra.http-fs.42.rsync-keys
status: {}

